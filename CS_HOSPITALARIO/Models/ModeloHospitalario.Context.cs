//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CS_HOSPITALARIO.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HospitalarioBD : DbContext
    {
        public HospitalarioBD()
            : base("name=HospitalarioBD")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ARTICULO> ARTICULO { get; set; }
        public virtual DbSet<ARTICULO_PRECIO> ARTICULO_PRECIO { get; set; }
        public virtual DbSet<BODEGA> BODEGA { get; set; }
        public virtual DbSet<CATEGORIA_CLIENTE> CATEGORIA_CLIENTE { get; set; }
        public virtual DbSet<CLASIFICACION> CLASIFICACION { get; set; }
        public virtual DbSet<CLIENTE> CLIENTE { get; set; }
        public virtual DbSet<CLIENTE_VENDEDOR> CLIENTE_VENDEDOR { get; set; }
        public virtual DbSet<COBRADOR> COBRADOR { get; set; }
        public virtual DbSet<CONDICION_PAGO> CONDICION_PAGO { get; set; }
        public virtual DbSet<CONSECUTIVO> CONSECUTIVO { get; set; }
        public virtual DbSet<CONSECUTIVO_FA> CONSECUTIVO_FA { get; set; }
        public virtual DbSet<CS_ACCIONES> CS_ACCIONES { get; set; }
        public virtual DbSet<CS_ADMISION> CS_ADMISION { get; set; }
        public virtual DbSet<CS_ADMISION_EGY> CS_ADMISION_EGY { get; set; }
        public virtual DbSet<CS_ADT> CS_ADT { get; set; }
        public virtual DbSet<CS_CAMA> CS_CAMA { get; set; }
        public virtual DbSet<CS_CIE> CS_CIE { get; set; }
        public virtual DbSet<CS_CITA> CS_CITA { get; set; }
        public virtual DbSet<CS_CONSULTAS> CS_CONSULTAS { get; set; }
        public virtual DbSet<CS_CONTACTOS> CS_CONTACTOS { get; set; }
        public virtual DbSet<CS_CONTROL_ACCION_DETALLE> CS_CONTROL_ACCION_DETALLE { get; set; }
        public virtual DbSet<CS_CONTROLADOR> CS_CONTROLADOR { get; set; }
        public virtual DbSet<CS_DEFINICION_PROC_IMAGEN> CS_DEFINICION_PROC_IMAGEN { get; set; }
        public virtual DbSet<CS_DIAGNOSTICO> CS_DIAGNOSTICO { get; set; }
        public virtual DbSet<CS_DIAGNOSTICO_DETALLE> CS_DIAGNOSTICO_DETALLE { get; set; }
        public virtual DbSet<CS_DIETA> CS_DIETA { get; set; }
        public virtual DbSet<CS_EMERGENCIA> CS_EMERGENCIA { get; set; }
        public virtual DbSet<CS_EQUIPO_QX> CS_EQUIPO_QX { get; set; }
        public virtual DbSet<CS_ESTACION> CS_ESTACION { get; set; }
        public virtual DbSet<CS_ESTACION_ENFERMERIA> CS_ESTACION_ENFERMERIA { get; set; }
        public virtual DbSet<CS_ESTACION_QX> CS_ESTACION_QX { get; set; }
        public virtual DbSet<CS_FARMACIA> CS_FARMACIA { get; set; }
        public virtual DbSet<CS_HABITACION> CS_HABITACION { get; set; }
        public virtual DbSet<CS_IMAGENOLOGIA> CS_IMAGENOLOGIA { get; set; }
        public virtual DbSet<CS_MEDICOS> CS_MEDICOS { get; set; }
        public virtual DbSet<CS_PACIENTES> CS_PACIENTES { get; set; }
        public virtual DbSet<CS_PEDIDO_EGY> CS_PEDIDO_EGY { get; set; }
        public virtual DbSet<CS_PERSONAL> CS_PERSONAL { get; set; }
        public virtual DbSet<CS_PLANTILLA> CS_PLANTILLA { get; set; }
        public virtual DbSet<CS_QUIROFANO> CS_QUIROFANO { get; set; }
        public virtual DbSet<CS_RANGO> CS_RANGO { get; set; }
        public virtual DbSet<CS_RESULT_IMAGENOLOGIA_DETALLE> CS_RESULT_IMAGENOLOGIA_DETALLE { get; set; }
        public virtual DbSet<CS_RESULTADO_IMAGENOLOGIA> CS_RESULTADO_IMAGENOLOGIA { get; set; }
        public virtual DbSet<CS_RESULTADOS_LAB_DETALLE> CS_RESULTADOS_LAB_DETALLE { get; set; }
        public virtual DbSet<CS_ROL> CS_ROL { get; set; }
        public virtual DbSet<CS_ROL_USER> CS_ROL_USER { get; set; }
        public virtual DbSet<CS_SEGURO> CS_SEGURO { get; set; }
        public virtual DbSet<CS_SIGNOS_VITALES> CS_SIGNOS_VITALES { get; set; }
        public virtual DbSet<CS_TRIAGE> CS_TRIAGE { get; set; }
        public virtual DbSet<CS_USER> CS_USER { get; set; }
        public virtual DbSet<DETALLE_DIRECCION> DETALLE_DIRECCION { get; set; }
        public virtual DbSet<DIRECC_EMBARQUE> DIRECC_EMBARQUE { get; set; }
        public virtual DbSet<EXISTENCIA_BODEGA> EXISTENCIA_BODEGA { get; set; }
        public virtual DbSet<NIT> NIT { get; set; }
        public virtual DbSet<NIVEL_PRECIO> NIVEL_PRECIO { get; set; }
        public virtual DbSet<PAIS> PAIS { get; set; }
        public virtual DbSet<PEDIDO> PEDIDO { get; set; }
        public virtual DbSet<PEDIDO_LINEA> PEDIDO_LINEA { get; set; }
        public virtual DbSet<RUTA> RUTA { get; set; }
        public virtual DbSet<UBICACION> UBICACION { get; set; }
        public virtual DbSet<UNIDAD_DE_MEDIDA> UNIDAD_DE_MEDIDA { get; set; }
        public virtual DbSet<VENDEDOR> VENDEDOR { get; set; }
        public virtual DbSet<VERSION_NIVEL> VERSION_NIVEL { get; set; }
        public virtual DbSet<ZONA> ZONA { get; set; }
        public virtual DbSet<CS_INTERACCIONES> CS_INTERACCIONES { get; set; }
        public virtual DbSet<GLOBALES_AS> GLOBALES_AS { get; set; }
        public virtual DbSet<CS_CATALOGO> CS_CATALOGO { get; set; }
        public virtual DbSet<CS_CATALOGO_DETALLE> CS_CATALOGO_DETALLE { get; set; }
        public virtual DbSet<CS_DEFINICION_PROCEDIMIENTO> CS_DEFINICION_PROCEDIMIENTO { get; set; }
        public virtual DbSet<CS_DEFINICION_PROCEDIMIENTO_DET> CS_DEFINICION_PROCEDIMIENTO_DET { get; set; }
        public virtual DbSet<CS_LABORATORIO> CS_LABORATORIO { get; set; }
        public virtual DbSet<CS_RESULTADOS_LAB_ENCABEZADO> CS_RESULTADOS_LAB_ENCABEZADO { get; set; }
        public virtual DbSet<CS_TEST> CS_TEST { get; set; }
        public virtual DbSet<CS_TEST_DETALLE> CS_TEST_DETALLE { get; set; }
        public virtual DbSet<CS_PARAMETROS> CS_PARAMETROS { get; set; }
        public virtual DbSet<CS_RECETA> CS_RECETA { get; set; }
        public virtual DbSet<DIVISION_GEOGRAFICA1> DIVISION_GEOGRAFICA1 { get; set; }
        public virtual DbSet<CS_GLOBAL_ODONTO> CS_GLOBAL_ODONTO { get; set; }
    
        public virtual int SP_Actualizar_pedido_monto_paciente(string pEDIDO, Nullable<int> vERSION, Nullable<decimal> tOTAL, Nullable<decimal> cANTIDAD)
        {
            var pEDIDOParameter = pEDIDO != null ?
                new ObjectParameter("PEDIDO", pEDIDO) :
                new ObjectParameter("PEDIDO", typeof(string));
    
            var vERSIONParameter = vERSION.HasValue ?
                new ObjectParameter("VERSION", vERSION) :
                new ObjectParameter("VERSION", typeof(int));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(decimal));
    
            var cANTIDADParameter = cANTIDAD.HasValue ?
                new ObjectParameter("CANTIDAD", cANTIDAD) :
                new ObjectParameter("CANTIDAD", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Actualizar_pedido_monto_paciente", pEDIDOParameter, vERSIONParameter, tOTALParameter, cANTIDADParameter);
        }
    
        public virtual int SP_Insertar_cliente_NIT(string iDENTIFICACION, string nOMBRE, string pAIS, string uSER)
        {
            var iDENTIFICACIONParameter = iDENTIFICACION != null ?
                new ObjectParameter("IDENTIFICACION", iDENTIFICACION) :
                new ObjectParameter("IDENTIFICACION", typeof(string));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var pAISParameter = pAIS != null ?
                new ObjectParameter("PAIS", pAIS) :
                new ObjectParameter("PAIS", typeof(string));
    
            var uSERParameter = uSER != null ?
                new ObjectParameter("USER", uSER) :
                new ObjectParameter("USER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_cliente_NIT", iDENTIFICACIONParameter, nOMBREParameter, pAISParameter, uSERParameter);
        }
    
        public virtual int SP_Insertar_cliente_vendedor(string cLIENTE, string vENDEDOR, string uSER)
        {
            var cLIENTEParameter = cLIENTE != null ?
                new ObjectParameter("CLIENTE", cLIENTE) :
                new ObjectParameter("CLIENTE", typeof(string));
    
            var vENDEDORParameter = vENDEDOR != null ?
                new ObjectParameter("VENDEDOR", vENDEDOR) :
                new ObjectParameter("VENDEDOR", typeof(string));
    
            var uSERParameter = uSER != null ?
                new ObjectParameter("USER", uSER) :
                new ObjectParameter("USER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_cliente_vendedor", cLIENTEParameter, vENDEDORParameter, uSERParameter);
        }
    
        public virtual ObjectResult<SP_Insertar_detalle_direccion_cliente_Result> SP_Insertar_detalle_direccion_cliente(string dIRECCION, string uSER)
        {
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var uSERParameter = uSER != null ?
                new ObjectParameter("USER", uSER) :
                new ObjectParameter("USER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Insertar_detalle_direccion_cliente_Result>("SP_Insertar_detalle_direccion_cliente", dIRECCIONParameter, uSERParameter);
        }
    
        public virtual int SP_Insertar_direcc_embarque(string cLIENTE, string dIRECCION, string dESCRIPCION, string uSER)
        {
            var cLIENTEParameter = cLIENTE != null ?
                new ObjectParameter("CLIENTE", cLIENTE) :
                new ObjectParameter("CLIENTE", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var uSERParameter = uSER != null ?
                new ObjectParameter("USER", uSER) :
                new ObjectParameter("USER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_direcc_embarque", cLIENTEParameter, dIRECCIONParameter, dESCRIPCIONParameter, uSERParameter);
        }
    
        public virtual int SP_Insertar_LineaPedido(Nullable<int> orden, string pEDIDO, Nullable<int> pEDIDO_LINEA, string bODEGA, string aRTICULO, Nullable<System.DateTime> fECHA_ENTREGA, Nullable<decimal> pRECIO_UNITARIO, Nullable<decimal> cANTIDAD_PEDIDA, Nullable<decimal> cANTIDAD_A_FACTURA, Nullable<System.DateTime> fECHA_PROMETIDA, string createdBy, string updatedBy)
        {
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var pEDIDOParameter = pEDIDO != null ?
                new ObjectParameter("PEDIDO", pEDIDO) :
                new ObjectParameter("PEDIDO", typeof(string));
    
            var pEDIDO_LINEAParameter = pEDIDO_LINEA.HasValue ?
                new ObjectParameter("PEDIDO_LINEA", pEDIDO_LINEA) :
                new ObjectParameter("PEDIDO_LINEA", typeof(int));
    
            var bODEGAParameter = bODEGA != null ?
                new ObjectParameter("BODEGA", bODEGA) :
                new ObjectParameter("BODEGA", typeof(string));
    
            var aRTICULOParameter = aRTICULO != null ?
                new ObjectParameter("ARTICULO", aRTICULO) :
                new ObjectParameter("ARTICULO", typeof(string));
    
            var fECHA_ENTREGAParameter = fECHA_ENTREGA.HasValue ?
                new ObjectParameter("FECHA_ENTREGA", fECHA_ENTREGA) :
                new ObjectParameter("FECHA_ENTREGA", typeof(System.DateTime));
    
            var pRECIO_UNITARIOParameter = pRECIO_UNITARIO.HasValue ?
                new ObjectParameter("PRECIO_UNITARIO", pRECIO_UNITARIO) :
                new ObjectParameter("PRECIO_UNITARIO", typeof(decimal));
    
            var cANTIDAD_PEDIDAParameter = cANTIDAD_PEDIDA.HasValue ?
                new ObjectParameter("CANTIDAD_PEDIDA", cANTIDAD_PEDIDA) :
                new ObjectParameter("CANTIDAD_PEDIDA", typeof(decimal));
    
            var cANTIDAD_A_FACTURAParameter = cANTIDAD_A_FACTURA.HasValue ?
                new ObjectParameter("CANTIDAD_A_FACTURA", cANTIDAD_A_FACTURA) :
                new ObjectParameter("CANTIDAD_A_FACTURA", typeof(decimal));
    
            var fECHA_PROMETIDAParameter = fECHA_PROMETIDA.HasValue ?
                new ObjectParameter("FECHA_PROMETIDA", fECHA_PROMETIDA) :
                new ObjectParameter("FECHA_PROMETIDA", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_LineaPedido", ordenParameter, pEDIDOParameter, pEDIDO_LINEAParameter, bODEGAParameter, aRTICULOParameter, fECHA_ENTREGAParameter, pRECIO_UNITARIOParameter, cANTIDAD_PEDIDAParameter, cANTIDAD_A_FACTURAParameter, fECHA_PROMETIDAParameter, createdByParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Insertar_receta(Nullable<int> nUM_CONSULTA, string pEDIDO, string bODEGA, string aRTICULO, Nullable<System.DateTime> fECHA_ENTREGA, Nullable<decimal> pRECIO_UNITARIO, Nullable<decimal> cANTIDAD_PEDIDA, Nullable<decimal> cANTIDAD_A_FACTURA, Nullable<System.DateTime> fECHA_PROMETIDA, string createdBy, string updatedBy, Nullable<int> dOSIS, Nullable<int> vIA, Nullable<int> dURACION)
        {
            var nUM_CONSULTAParameter = nUM_CONSULTA.HasValue ?
                new ObjectParameter("NUM_CONSULTA", nUM_CONSULTA) :
                new ObjectParameter("NUM_CONSULTA", typeof(int));
    
            var pEDIDOParameter = pEDIDO != null ?
                new ObjectParameter("PEDIDO", pEDIDO) :
                new ObjectParameter("PEDIDO", typeof(string));
    
            var bODEGAParameter = bODEGA != null ?
                new ObjectParameter("BODEGA", bODEGA) :
                new ObjectParameter("BODEGA", typeof(string));
    
            var aRTICULOParameter = aRTICULO != null ?
                new ObjectParameter("ARTICULO", aRTICULO) :
                new ObjectParameter("ARTICULO", typeof(string));
    
            var fECHA_ENTREGAParameter = fECHA_ENTREGA.HasValue ?
                new ObjectParameter("FECHA_ENTREGA", fECHA_ENTREGA) :
                new ObjectParameter("FECHA_ENTREGA", typeof(System.DateTime));
    
            var pRECIO_UNITARIOParameter = pRECIO_UNITARIO.HasValue ?
                new ObjectParameter("PRECIO_UNITARIO", pRECIO_UNITARIO) :
                new ObjectParameter("PRECIO_UNITARIO", typeof(decimal));
    
            var cANTIDAD_PEDIDAParameter = cANTIDAD_PEDIDA.HasValue ?
                new ObjectParameter("CANTIDAD_PEDIDA", cANTIDAD_PEDIDA) :
                new ObjectParameter("CANTIDAD_PEDIDA", typeof(decimal));
    
            var cANTIDAD_A_FACTURAParameter = cANTIDAD_A_FACTURA.HasValue ?
                new ObjectParameter("CANTIDAD_A_FACTURA", cANTIDAD_A_FACTURA) :
                new ObjectParameter("CANTIDAD_A_FACTURA", typeof(decimal));
    
            var fECHA_PROMETIDAParameter = fECHA_PROMETIDA.HasValue ?
                new ObjectParameter("FECHA_PROMETIDA", fECHA_PROMETIDA) :
                new ObjectParameter("FECHA_PROMETIDA", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var dOSISParameter = dOSIS.HasValue ?
                new ObjectParameter("DOSIS", dOSIS) :
                new ObjectParameter("DOSIS", typeof(int));
    
            var vIAParameter = vIA.HasValue ?
                new ObjectParameter("VIA", vIA) :
                new ObjectParameter("VIA", typeof(int));
    
            var dURACIONParameter = dURACION.HasValue ?
                new ObjectParameter("DURACION", dURACION) :
                new ObjectParameter("DURACION", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Insertar_receta", nUM_CONSULTAParameter, pEDIDOParameter, bODEGAParameter, aRTICULOParameter, fECHA_ENTREGAParameter, pRECIO_UNITARIOParameter, cANTIDAD_PEDIDAParameter, cANTIDAD_A_FACTURAParameter, fECHA_PROMETIDAParameter, createdByParameter, updatedByParameter, dOSISParameter, vIAParameter, dURACIONParameter);
        }
    
        public virtual ObjectResult<SP_Listado_CIE_Capitulos_Result> SP_Listado_CIE_Capitulos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listado_CIE_Capitulos_Result>("SP_Listado_CIE_Capitulos");
        }
    
        public virtual ObjectResult<SP_Listado_CIE_SubCapitulos_Result> SP_Listado_CIE_SubCapitulos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listado_CIE_SubCapitulos_Result>("SP_Listado_CIE_SubCapitulos");
        }
    
        public virtual ObjectResult<SP_Listado_CIE_Tema_Result> SP_Listado_CIE_Tema()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listado_CIE_Tema_Result>("SP_Listado_CIE_Tema");
        }
    
        public virtual ObjectResult<SP_Listado_CIE_Total_Result> SP_Listado_CIE_Total()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listado_CIE_Total_Result>("SP_Listado_CIE_Total");
        }
    
        public virtual ObjectResult<SP_Listado_consulta_Result> SP_Listado_consulta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listado_consulta_Result>("SP_Listado_consulta");
        }
    
        public virtual ObjectResult<SP_Listado_Examen_Test_Detalle_Result> SP_Listado_Examen_Test_Detalle(Nullable<int> eXAMEN)
        {
            var eXAMENParameter = eXAMEN.HasValue ?
                new ObjectParameter("EXAMEN", eXAMEN) :
                new ObjectParameter("EXAMEN", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listado_Examen_Test_Detalle_Result>("SP_Listado_Examen_Test_Detalle", eXAMENParameter);
        }
    
        public virtual ObjectResult<Sp_Listado_Limite_Registrar_Resultado_Result> Sp_Listado_Limite_Registrar_Resultado(Nullable<int> tEST, string sEXO, Nullable<int> eDAD)
        {
            var tESTParameter = tEST.HasValue ?
                new ObjectParameter("TEST", tEST) :
                new ObjectParameter("TEST", typeof(int));
    
            var sEXOParameter = sEXO != null ?
                new ObjectParameter("SEXO", sEXO) :
                new ObjectParameter("SEXO", typeof(string));
    
            var eDADParameter = eDAD.HasValue ?
                new ObjectParameter("EDAD", eDAD) :
                new ObjectParameter("EDAD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Listado_Limite_Registrar_Resultado_Result>("Sp_Listado_Limite_Registrar_Resultado", tESTParameter, sEXOParameter, eDADParameter);
        }
    
        public virtual ObjectResult<SP_Listado_precio_articulo_Result> SP_Listado_precio_articulo(string aRTICULO, string nIVEL_PRECIO, Nullable<System.DateTime> fECHA_PEDIDO)
        {
            var aRTICULOParameter = aRTICULO != null ?
                new ObjectParameter("ARTICULO", aRTICULO) :
                new ObjectParameter("ARTICULO", typeof(string));
    
            var nIVEL_PRECIOParameter = nIVEL_PRECIO != null ?
                new ObjectParameter("NIVEL_PRECIO", nIVEL_PRECIO) :
                new ObjectParameter("NIVEL_PRECIO", typeof(string));
    
            var fECHA_PEDIDOParameter = fECHA_PEDIDO.HasValue ?
                new ObjectParameter("FECHA_PEDIDO", fECHA_PEDIDO) :
                new ObjectParameter("FECHA_PEDIDO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listado_precio_articulo_Result>("SP_Listado_precio_articulo", aRTICULOParameter, nIVEL_PRECIOParameter, fECHA_PEDIDOParameter);
        }
    
        public virtual ObjectResult<SP_Listado_Receta_Consulta_Result> SP_Listado_Receta_Consulta(Nullable<int> cONSULTA)
        {
            var cONSULTAParameter = cONSULTA.HasValue ?
                new ObjectParameter("CONSULTA", cONSULTA) :
                new ObjectParameter("CONSULTA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listado_Receta_Consulta_Result>("SP_Listado_Receta_Consulta", cONSULTAParameter);
        }
    
        public virtual ObjectResult<SP_Listado_usuario_CS_Result> SP_Listado_usuario_CS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listado_usuario_CS_Result>("SP_Listado_usuario_CS");
        }
    
        public virtual ObjectResult<spListadoArticulosPedios_Result> spListadoArticulosPedios(Nullable<int> admin)
        {
            var adminParameter = admin.HasValue ?
                new ObjectParameter("admin", admin) :
                new ObjectParameter("admin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListadoArticulosPedios_Result>("spListadoArticulosPedios", adminParameter);
        }
    
        public virtual ObjectResult<SpListadoExamen_Result> SpListadoExamen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoExamen_Result>("SpListadoExamen");
        }
    
        public virtual ObjectResult<SpListadoExamenAdmisionImagen_Result> SpListadoExamenAdmisionImagen(Nullable<int> iDADMISION)
        {
            var iDADMISIONParameter = iDADMISION.HasValue ?
                new ObjectParameter("IDADMISION", iDADMISION) :
                new ObjectParameter("IDADMISION", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoExamenAdmisionImagen_Result>("SpListadoExamenAdmisionImagen", iDADMISIONParameter);
        }
    
        public virtual ObjectResult<SpListadoExamenAdmisionLaboratorio_Result> SpListadoExamenAdmisionLaboratorio(Nullable<int> iDADMISION)
        {
            var iDADMISIONParameter = iDADMISION.HasValue ?
                new ObjectParameter("IDADMISION", iDADMISION) :
                new ObjectParameter("IDADMISION", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoExamenAdmisionLaboratorio_Result>("SpListadoExamenAdmisionLaboratorio", iDADMISIONParameter);
        }
    
        public virtual ObjectResult<SpListadoExamenLaboratorioRecepcion_Result> SpListadoExamenLaboratorioRecepcion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoExamenLaboratorioRecepcion_Result>("SpListadoExamenLaboratorioRecepcion");
        }
    
        public virtual ObjectResult<SpListadoExamenLaboratorioRecepcionado_Result> SpListadoExamenLaboratorioRecepcionado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoExamenLaboratorioRecepcionado_Result>("SpListadoExamenLaboratorioRecepcionado");
        }
    
        public virtual ObjectResult<SpListadoExamenLaboratorioRegistrado_Result> SpListadoExamenLaboratorioRegistrado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoExamenLaboratorioRegistrado_Result>("SpListadoExamenLaboratorioRegistrado");
        }
    
        public virtual ObjectResult<SpListadoProcImagen_Result> SpListadoProcImagen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoProcImagen_Result>("SpListadoProcImagen");
        }
    
        public virtual ObjectResult<SpListadoTotalesAdmisionesDB_Result> SpListadoTotalesAdmisionesDB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoTotalesAdmisionesDB_Result>("SpListadoTotalesAdmisionesDB");
        }
    
        public virtual int SP_Insertar_receta_No_Inv(Nullable<int> nUM_CONSULTA, string pEDIDO, string bODEGA, string aRTICULO, Nullable<System.DateTime> fECHA_ENTREGA, Nullable<decimal> pRECIO_UNITARIO, Nullable<decimal> cANTIDAD_PEDIDA, Nullable<decimal> cANTIDAD_A_FACTURA, Nullable<System.DateTime> fECHA_PROMETIDA, string createdBy, string updatedBy, Nullable<int> dOSIS, Nullable<int> vIA, Nullable<int> dURACION, Nullable<int> pRESENTACION)
        {
            var nUM_CONSULTAParameter = nUM_CONSULTA.HasValue ?
                new ObjectParameter("NUM_CONSULTA", nUM_CONSULTA) :
                new ObjectParameter("NUM_CONSULTA", typeof(int));
    
            var pEDIDOParameter = pEDIDO != null ?
                new ObjectParameter("PEDIDO", pEDIDO) :
                new ObjectParameter("PEDIDO", typeof(string));
    
            var bODEGAParameter = bODEGA != null ?
                new ObjectParameter("BODEGA", bODEGA) :
                new ObjectParameter("BODEGA", typeof(string));
    
            var aRTICULOParameter = aRTICULO != null ?
                new ObjectParameter("ARTICULO", aRTICULO) :
                new ObjectParameter("ARTICULO", typeof(string));
    
            var fECHA_ENTREGAParameter = fECHA_ENTREGA.HasValue ?
                new ObjectParameter("FECHA_ENTREGA", fECHA_ENTREGA) :
                new ObjectParameter("FECHA_ENTREGA", typeof(System.DateTime));
    
            var pRECIO_UNITARIOParameter = pRECIO_UNITARIO.HasValue ?
                new ObjectParameter("PRECIO_UNITARIO", pRECIO_UNITARIO) :
                new ObjectParameter("PRECIO_UNITARIO", typeof(decimal));
    
            var cANTIDAD_PEDIDAParameter = cANTIDAD_PEDIDA.HasValue ?
                new ObjectParameter("CANTIDAD_PEDIDA", cANTIDAD_PEDIDA) :
                new ObjectParameter("CANTIDAD_PEDIDA", typeof(decimal));
    
            var cANTIDAD_A_FACTURAParameter = cANTIDAD_A_FACTURA.HasValue ?
                new ObjectParameter("CANTIDAD_A_FACTURA", cANTIDAD_A_FACTURA) :
                new ObjectParameter("CANTIDAD_A_FACTURA", typeof(decimal));
    
            var fECHA_PROMETIDAParameter = fECHA_PROMETIDA.HasValue ?
                new ObjectParameter("FECHA_PROMETIDA", fECHA_PROMETIDA) :
                new ObjectParameter("FECHA_PROMETIDA", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var dOSISParameter = dOSIS.HasValue ?
                new ObjectParameter("DOSIS", dOSIS) :
                new ObjectParameter("DOSIS", typeof(int));
    
            var vIAParameter = vIA.HasValue ?
                new ObjectParameter("VIA", vIA) :
                new ObjectParameter("VIA", typeof(int));
    
            var dURACIONParameter = dURACION.HasValue ?
                new ObjectParameter("DURACION", dURACION) :
                new ObjectParameter("DURACION", typeof(int));
    
            var pRESENTACIONParameter = pRESENTACION.HasValue ?
                new ObjectParameter("PRESENTACION", pRESENTACION) :
                new ObjectParameter("PRESENTACION", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_receta_No_Inv", nUM_CONSULTAParameter, pEDIDOParameter, bODEGAParameter, aRTICULOParameter, fECHA_ENTREGAParameter, pRECIO_UNITARIOParameter, cANTIDAD_PEDIDAParameter, cANTIDAD_A_FACTURAParameter, fECHA_PROMETIDAParameter, createdByParameter, updatedByParameter, dOSISParameter, vIAParameter, dURACIONParameter, pRESENTACIONParameter);
        }
    
        public virtual ObjectResult<SP_listar_paciente_Result> SP_listar_paciente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_listar_paciente_Result>("SP_listar_paciente");
        }
    
        public virtual ObjectResult<SpListadoExamenLaboratorio_Result> SpListadoExamenLaboratorio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoExamenLaboratorio_Result>("SpListadoExamenLaboratorio");
        }
    
        public virtual ObjectResult<SpListadoCitasCS_Result> SpListadoCitasCS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoCitasCS_Result>("SpListadoCitasCS");
        }
    
        public virtual ObjectResult<SpListadoCitasCS2_Result> SpListadoCitasCS1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoCitasCS2_Result>("SpListadoCitasCS1");
        }
    
        public virtual ObjectResult<SpListadoCitasCS2_Result1> SpListadoCitasCS2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpListadoCitasCS2_Result1>("SpListadoCitasCS2");
        }
    }
}
