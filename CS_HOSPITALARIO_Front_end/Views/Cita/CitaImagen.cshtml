
@{
    ViewBag.Title = "Cita de Imagen";
}
<script src="~/Scripts/bundle.js"></script>
<link href="~/Content/dx.common.css" rel="stylesheet" />
<link href="~/Content/dx.light.css" rel="stylesheet" />
<script src="~/Scripts/vendor.js"></script>
<style>
    .div.fc-popover.fc-more-popover {
        overflow-y: scroll !important;
        max-height: 50px !important;
    }

    .fc-event-container .fc-event {
        color: #fff !important;
        font-size: .95em !important;
        /*font-weight:bold;*/
        line-height: 1.3 !important;
        border-radius: 4px !important;
        border: 2px solid !important;
    }
</style>
<div class="row m-0 gap-20 masonry pos-r">
    <div class="masonry-item w-100">
        <div class="row gap-20">
            <div class="masonry-item col-md-12 col-sm-12">
                <div class="bd bgc-white">
                    <div class="layers">
                        <div class="ta-c w-100 p-10">
                            <h4 class="float-left"><span class="color-secondary-h text-uppercase">@ViewBag.Title</span></h4>
                            <nav class="float-right m-0" aria-label="breadcrumb">
                                <ol class="breadcrumb bg-color-blanco">
                                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Principal</a></li>
                                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Admision")">Laboratorio</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row m-0 gap-20 masonry pos-r">
    <div class="masonry-item w-100">
        <div class="row gap-20">
            <div class="masonry-item col-md-12 col-sm-12">
                <div class="bgc-white p-20 bd">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="row">
                                <label class="col-md-3">Filtrar por Recurso:</label>
                                <div class="col-md-9">
                                    <div id="FILTRO_RECURSO"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                <label class="col-md-3">Filtrar por Estado:</label>
                                <div class="col-md-9">
                                    <div id="FILTRO_ESTADO"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="row m-0 gap-20 masonry pos-r">
    <div class="masonry-item w-100">
        <div class="row gap-20">
            <div class="masonry-item col-md-12 col-sm-12">
                <div class="bgc-white p-20 bd" style="height:1000px">
                    <hr />
                    <div id="calender"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="glyphicon glyphicon-remove"></span> Remover
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-pencil"></span> Editar
                </button>
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModalSave" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventTitle">Registrar Cita</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form class="col-md-12 form-horizontal">
                    <input type="hidden" id="hdEventID" value="0" />
                    <div class="form-group" style="display:none">
                        <fieldset disabled>
                            <label>Asunto</label>
                            <input type="text" id="txtSubject" class="form-control" />
                        </fieldset>
                    </div>
                    <div class="form-group">
                        <label>Paciente:</label>
                        <div id="PACIENTE"></div>
                        @*@Html.DropDownList("PACIENTE", null, htmlAttributes: new { @class = "form-control" })*@
                    </div>
                    <div class="form-group">
                        <label>Área de Servicio:</label>
                        @*@Html.DropDownList("AREA", null, htmlAttributes: new { @class = "form-control" })*@
                        <div id="AREA"></div>
                    </div>
                    <div class="form-group">
                        <label>Recurso:</label>
                        @*@Html.DropDownList("RECURSO_CITA", null, htmlAttributes: new { @class = "form-control" })*@
                        <div id="RECURSO_CITA"></div>
                    </div>
                    <div id="div_estado" class="form-group" style="display:none">
                        <label>Estado:</label>
                        @*@Html.DropDownList("ESTADO", null, htmlAttributes: new { @class = "form-control" })*@
                        <div id="ESTADO"></div>
                    </div>
                    <div class="form-group">
                        <label>Fecha Inicio:</label>
                        <div class="input-group date" id="dtp1">
                            @*<input type="text" id="txtStart" class="form-control" />
                                <span class="input-group-addon">
                                    <span class="ti-calendar"></span>
                                </span>*@
                        </div>

                    </div>
                    <div class="form-group" id="divEndDate">
                        <label>Fecha Fin:</label>
                        <div class="input-group date" id="dtp2">
                            @*<input type="text" id="txtEnd" class="form-control" />
                                <span class="input-group-addon">
                                    <span class="ti-calendar"></span>
                                </span>*@
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Descripcion:</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSave" class="btn btn-success">Guardar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
<link href="~/Content/fullcalendar.css" rel="stylesheet" />
@section Scripts
    {
    @*<script src="~/Scripts/vendor.js"></script>*@
    <script src="~/Scripts/dx.all.js"></script>
    <script src="~/Scripts/cldr/jquery-ui.min.js"></script>
    <script src="~/Scripts/cldr/moment.min.js"></script>
    <script src="~/Scripts/fullcalendar.js"></script>
    <script src="~/Scripts/locale-all.js"></script>
    <script>
        var initialLocaleCode = 'es';
        var fechaCalendario = new Date();
        var estado = 0;
        var recurso = 0;
        var events = [];
        var selectedEvent = null;
        $(document).ready(function () {
            FetchEventAndRenderCalendar(recurso, estado);
            $('#btnEdit').click(function () {
                $('#div_estado').show();
                //Open modal dialog for edit event
                openAddEditForm();
            })
            $('#btnDelete').click(function () {
                if (selectedEvent != null && confirm('Esta seguro de eliminar la cita?')) {
                    $.ajax({
                        type: "POST",
                        url: '/Cita/DeleteEvent',
                        data: { 'eventID': selectedEvent.eventID },
                        success: function (data) {
                            if (data.status) {
                                //Refresh the calender
                                FetchEventAndRenderCalendar(recurso, estado);
                                $('#myModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('Failed');
                        }
                    })
                }
            })
            $("#dtp1,#dtp2").dxDateBox({
                type: "datetime",
                timeFormat: 'DD/MM/YYYY HH:mm',
                pickerType: "list",
                interval: 30,
                showClearButton: true
            });
            $('#btnSave').click(function () {
                //Validation/
                var startDate;
                var endDate;

                if ($("#PACIENTE").dxSelectBox('instance').option("value") == null) {
                    alert('El paciente es requerido');
                    return;
                }
                if ($("#AREA").dxSelectBox('instance').option("value") == null) {
                    alert('El area es requerido');
                    return;
                }
                if ($("#RECURSO_CITA").dxSelectBox('instance').option("value") == null) {
                    alert('El recurso es requerido');
                    return;
                }
                //if ($('#ESTADO').val().trim() == "") {
                //    alert('El estado es requerido');
                //    return;
                //}
                if ($("#dtp1").dxDateBox('instance').option("value") == null) {
                    alert('La fecha de inicio es requerido');
                    return;
                }
                if ($("#dtp2").dxDateBox('instance').option("value") == null) {
                    alert('La fecha fin es requerido');
                    return;
                }
                else {
                    try {
                        startDate = $("#dtp1").dxDateBox('instance').option("value")["_d"].toUTCString();
                    }
                    catch (err) {
                        startDate = $("#dtp1").dxDateBox('instance').option("value").toUTCString();
                    }
                    try {
                        endDate = $("#dtp2").dxDateBox('instance').option("value")["_d"].toUTCString();
                    }
                    catch (err) {
                        endDate = $("#dtp2").dxDateBox('instance').option("value").toUTCString();
                    }
                    if (startDate > endDate) {
                        alert('La fecha de inicio debe de ser menor a la feha fin');
                        return;
                    }
                }
                var data = {
                    ID_CITA: $('#hdEventID').val(),
                    ASUNTO: $('#txtSubject').val().trim(),
                    RECURSO_ID: $("#RECURSO_CITA").dxSelectBox('instance').option("value"),
                    CLIENTE_ID: $("#PACIENTE").dxSelectBox('instance').option("value"),
                    AREA_SERVICIO_ID: $("#AREA").dxSelectBox('instance').option("value"),
                    ESTATUS: $("#ESTADO").dxSelectBox('instance').option("value"),
                    FECHA_INICIO_ATENCION: startDate,
                    FECHA_FIN_ATENCION: endDate,
                    OBSERVACION: $('#txtDescription').val()
                }
                SaveEvent(data);
                // call function for submit data to the server
            })

            SelectPacientes();
            SelectAreaServicios();
            SelectRecursos();
            SelectEstados();
            SelectFiltroEstados();
            SelectFiltroRecursos();
        })
        function FetchEventAndRenderCalendar(filtro_recurso, filtro_estado) {
            events = [];
            if (filtro_recurso == 0 && filtro_estado == 0) {
                $.ajax({
                    type: "GET",
                    url: "/Cita/GetEventsAll",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            var colorevent;
                            switch (v.ESTADOID) {
                                case 2104:
                                    colorevent = "#F57C00"
                                    break;
                                case 2105:
                                    colorevent = "#2E7D32"
                                    break;
                                case 2106:
                                    colorevent = "#3F51B5"
                                    break;
                                case 2107:
                                    colorevent = "#C62828"
                                    break;
                            }
                            events.push({
                                eventID: v.ID_CITA,
                                pacienteID: v.PASIENTECODCLIENTE,
                                pacientes: v.PACIENTES,
                                recursosID: v.RECURSOSID,
                                recursos: v.RECURSODESCRIPCION,
                                estadoID: v.ESTADOID,
                                estado: v.ESTADODESCRIPCION,
                                areaID: v.AREAID,
                                area: v.AREADESCRIPCION,
                                title: v.ASUNTO,
                                description: v.OBSERVACIONES,
                                start: moment(v.Start),
                                end: v.End != null ? moment(v.End) : null,
                                color: colorevent
                            });
                        })
                        GenerateCalender(events);
                    },
                    error: function (error) {
                        alert(error);
                    }
                })
            }
            else {
                if (filtro_recurso != 0 && filtro_estado != 0) {
                    var data = JSON.stringify({
                        'estado': filtro_estado,
                        'recurso': filtro_recurso
                    });
                    $.ajax({
                        type: "POST",
                        contentType: "application/json",
                        url: "/Cita/GetEventsRecursosEstado",
                        data: data,
                        success: function (data) {
                            $.each(data, function (i, v) {
                                var colorevent;
                                switch (v.ESTADOID) {
                                    case 2104:
                                        colorevent = "#F57C00"
                                        break;
                                    case 2105:
                                        colorevent = "#2E7D32"
                                        break;
                                    case 2106:
                                        colorevent = "#3F51B5"
                                        break;
                                    case 2107:
                                        colorevent = "#C62828"
                                        break;
                                }
                                events.push({
                                    eventID: v.ID_CITA,
                                    pacienteID: v.PASIENTECODCLIENTE,
                                    pacientes: v.PACIENTES,
                                    recursosID: v.RECURSOSID,
                                    recursos: v.RECURSODESCRIPCION,
                                    estadoID: v.ESTADOID,
                                    estado: v.ESTADODESCRIPCION,
                                    areaID: v.AREAID,
                                    area: v.AREADESCRIPCION,
                                    title: v.ASUNTO,
                                    description: v.OBSERVACIONES,
                                    start: moment(v.Start),
                                    end: v.End != null ? moment(v.End) : null,
                                    color: colorevent
                                });
                            })
                            GenerateCalender(events);
                        },
                        error: function (error) {
                            alert(error);
                        }
                    })
                }
                else {
                    if (filtro_recurso != 0 && filtro_estado == 0) {
                        var data = JSON.stringify({
                            'recurso': filtro_recurso
                        });
                        $.ajax({
                            type: "POST",
                            contentType: "application/json",
                            url: "/Cita/GetEventsRecursos",
                            data: data,
                            success: function (data) {
                                $.each(data, function (i, v) {
                                    var colorevent;
                                    switch (v.ESTADOID) {
                                        case 2104:
                                            colorevent = "#F57C00"
                                            break;
                                        case 2105:
                                            colorevent = "#2E7D32"
                                            break;
                                        case 2106:
                                            colorevent = "#3F51B5"
                                            break;
                                        case 2107:
                                            colorevent = "#C62828"
                                            break;
                                    }
                                    events.push({
                                        eventID: v.ID_CITA,
                                        pacienteID: v.PASIENTECODCLIENTE,
                                        pacientes: v.PACIENTES,
                                        recursosID: v.RECURSOSID,
                                        recursos: v.RECURSODESCRIPCION,
                                        estadoID: v.ESTADOID,
                                        estado: v.ESTADODESCRIPCION,
                                        areaID: v.AREAID,
                                        area: v.AREADESCRIPCION,
                                        title: v.ASUNTO,
                                        description: v.OBSERVACIONES,
                                        start: moment(v.Start),
                                        end: v.End != null ? moment(v.End) : null,
                                        color: colorevent
                                    });
                                })
                                GenerateCalender(events);
                            },
                            error: function (error) {
                                alert(error);
                            }
                        })
                    }
                    else {
                        var data = JSON.stringify({
                            'estado': filtro_estado
                        });
                        $.ajax({
                            type: "POST",
                            contentType: "application/json",
                            url: "/Cita/GetEventsEstado",
                            data: data,
                            success: function (data) {
                                $.each(data, function (i, v) {
                                    var colorevent;
                                    switch (v.ESTADOID) {
                                        case 2104:
                                            colorevent = "#F57C00"
                                            break;
                                        case 2105:
                                            colorevent = "#2E7D32"
                                            break;
                                        case 2106:
                                            colorevent = "#3F51B5"
                                            break;
                                        case 2107:
                                            colorevent = "#C62828"
                                            break;
                                    }
                                    events.push({
                                        eventID: v.ID_CITA,
                                        pacienteID: v.PASIENTECODCLIENTE,
                                        pacientes: v.PACIENTES,
                                        recursosID: v.RECURSOSID,
                                        recursos: v.RECURSODESCRIPCION,
                                        estadoID: v.ESTADOID,
                                        estado: v.ESTADODESCRIPCION,
                                        areaID: v.AREAID,
                                        area: v.AREADESCRIPCION,
                                        title: v.ASUNTO,
                                        description: v.OBSERVACIONES,
                                        start: moment(v.Start),
                                        end: v.End != null ? moment(v.End) : null,
                                        color: colorevent
                                    });
                                })
                                GenerateCalender(events);
                            },
                            error: function (error) {
                                alert(error);
                            }
                        })
                    }
                }
            }
        }
        function GenerateCalender(events) {
            $('#calender').fullCalendar('destroy');
            $('#calender').fullCalendar({
                locale: initialLocaleCode,
                weekNumbers: true,
                contentHeight: 700,
                defaultView: 'agendaWeek',
                defaultDate: fechaCalendario,
                timeZone: 'UTC',
                timeFormat: 'h(:mm)a',
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'agendaWeek,month,basicDay,listWeek'
                },
                businessHours: {
                    // days of week. an array of zero-based day of week integers (0=Sunday)
                    dow: [1, 2, 3, 4, 5, 6], // Monday - Thursday

                    start: '07:00', // a start time (07am in this example)
                    end: '19:00', // an end time (7pm in this example)
                },
                navLinks: true,
                eventLimit: true,
                eventColor: '#378006',
                events: events,
                eventClick: function (calEvent, jsEvent, view) {
                    selectedEvent = calEvent;
                    $('#myModal #eventTitle').text(calEvent.title);
                    fechaCalendario = calEvent.start;
                    var $description = $('<div/>');
                    $description.append($('<p/>').html('<b>Cod Cliente:</b>' + calEvent.pacienteID));
                    $description.append($('<p/>').html('<b>Paciente:</b>' + calEvent.pacientes));
                    $description.append($('<p/>').html('<b>Área de Servicio:</b>' + calEvent.area));
                    $description.append($('<p/>').html('<b>Recurso:</b>' + calEvent.recursos));
                    $description.append($('<p/>').html('<b>Estado:</b>' + calEvent.estado));
                    $description.append($('<p/>').html('<b>Fecha Inicio:</b>' + calEvent.start.format("DD-MMM-YYYY HH:mm")));
                    if (calEvent.end != null) {
                        $description.append($('<p/>').html('<b>Fecha Fin:</b>' + calEvent.end.format("DD-MMM-YYYY HH:mm")));
                    }
                    $description.append($('<p/>').html('<b>Observaciones:</b>' + calEvent.description));
                    $('#myModal #pDetails').empty().html($description);
                    $('#myModal').modal();
                },
                selectable: true,
                select: function (start, end) {
                    fechaCalendario = start;
                    var fecha_inicio = new Date(start.format('MM/DD/YYYY HH:mm'));
                    var fecha_fin = new Date(end.format('MM/DD/YYYY HH:mm'));
                    if (fecha_inicio.getDay() != 0) {
                        var hora_inicio = fecha_inicio.getHours();
                        var hora_fin = fecha_fin.getHours();
                        if (((hora_inicio >= 7 && hora_inicio <= 18) && hora_fin <= 19) || hora_inicio == 0) {
                            selectedEvent = {
                                eventID: 0,
                                title: '',
                                description: '',
                                start: fecha_inicio,
                                end: fecha_fin,
                                allDay: false,
                                color: ''
                            };
                            openAddEditForm();
                            $('#calendar').fullCalendar('unselect');
                        }
                        else {
                            alert("Estimado usuario,Solo se puede agregar cita en horario de trabajo");
                        }
                    }
                    else {
                        alert("Estimado usuario,Solo se puede agregar cita en horario de trabajo");
                    }
                    $('#div_estado').hide();
                },
                editable: true,
                eventDrop: function (event) {
                    fechaCalendario = event.start;
                    var fecha_inicio = new Date(event.start.format('MM/DD/YYYY HH:mm'));
                    var fecha_fin = new Date(event.end.format('MM/DD/YYYY HH:mm'));
                    if (fecha_inicio.getDay() != 0) {
                        var hora_inicio = fecha_inicio.getHours();
                        var hora_fin = fecha_fin.getHours();
                        if ((hora_inicio >= 7 && hora_inicio <= 18) && hora_fin <= 19) {
                            var data = {
                                ID_CITA: event.eventID,
                                ASUNTO: event.title,
                                CLIENTE_ID: event.pacienteID,
                                RECURSO_ID: event.recursosID,
                                AREA_SERVICIO_ID: event.areaID,
                                ESTATUS: event.estadoID,
                                FECHA_INICIO_ATENCION: event.start.format('MM/DD/YYYY HH:mm'),
                                FECHA_FIN_ATENCION: event.end.format('MM/DD/YYYY HH:mm'),
                                OBSERVACION: event.description
                            };
                            SaveEvent(data);
                        }
                        else {
                            alert("Estimado usuario,Solo se puede mover la cita en horario de trabajo");
                            FetchEventAndRenderCalendar(recurso, estado);
                        }
                    }
                    else {
                        alert("Estimado usuario,Solo se puede mover la cita en horario de trabajo");
                        FetchEventAndRenderCalendar(recurso, estado);
                    }
                },
                eventResize: function (event) {
                    fechaCalendario = fecha_inicio;
                    var fecha_inicio = new Date(event.start.format('MM/DD/YYYY HH:mm'));
                    var fecha_fin = new Date(event.end.format('MM/DD/YYYY HH:mm'));
                    if (event.start.format('MM/DD/YYYY') == event.end.format('MM/DD/YYYY')) {
                        var hora_inicio = fecha_inicio.getHours();
                        var hora_fin = fecha_fin.getHours();
                        if ((hora_inicio >= 7 && hora_inicio <= 18) && hora_fin <= 19) {
                            if (event != null && confirm('Esta seguro de extender la cita?')) {
                                fechaCalendario = event.start;
                                var data = {
                                    ID_CITA: event.eventID,
                                    ASUNTO: event.title,
                                    CLIENTE_ID: event.pacienteID,
                                    RECURSO_ID: event.recursosID,
                                    AREA_SERVICIO_ID: event.areaID,
                                    ESTATUS: event.estadoID,
                                    FECHA_INICIO_ATENCION: event.start.format('MM/DD/YYYY HH:mm'),
                                    FECHA_FIN_ATENCION: event.end.format('MM/DD/YYYY HH:mm'),
                                    OBSERVACION: event.description
                                };
                                SaveEvent(data);
                            }
                            else {
                                FetchEventAndRenderCalendar(recurso, estado);
                            }
                        }
                        else {
                            alert("Estimado usuario,Solo se puede mover la cita en horarios de trabajo");
                            FetchEventAndRenderCalendar(recurso, estado);
                        }
                    }
                    else {
                        alert("Estimado usuario,Solo se puede redimensionar la cita dentro del mismo dia");
                        FetchEventAndRenderCalendar(recurso, estado);
                    }

                }
            })
        }
        function openAddEditForm() {
            if (selectedEvent != null) {
                fechaCalendario = selectedEvent.start;
                $('#hdEventID').val(selectedEvent.eventID);
                $('#txtSubject').val(selectedEvent.title);

                $("#PACIENTE").dxSelectBox('instance').option("value", selectedEvent.pacienteID);
                $("#AREA").dxSelectBox('instance').option("value", selectedEvent.areaID);
                $("#RECURSO_CITA").dxSelectBox('instance').option("value", selectedEvent.recursosID);
                $("#ESTADO").dxSelectBox('instance').option("value", selectedEvent.estadoID);

                //$('#PACIENTE option[value=' + selectedEvent.pacienteID + ']').attr('selected', 'selected');
                //$('#AREA option[value=' + selectedEvent.areaID + ']').attr('selected', 'selected');
                //$('#RECURSO_CITA option[value=' + selectedEvent.recursosID + ']').attr('selected', 'selected');
                //$('#ESTADO option[value=' + selectedEvent.estadoID + ']').attr('selected', 'selected');

                $("#dtp1").dxDateBox('instance').option("value", selectedEvent.start);
                $("#dtp2").dxDateBox('instance').option("value", selectedEvent.end);
                $('#txtDescription').val(selectedEvent.description);
                $('#ddThemeColor').val(selectedEvent.color);
            }
            $('#myModal').modal('hide');
            $('#myModalSave').modal();
        }
        function SaveEvent(data) {
            $.ajax({
                type: "POST",
                url: '/Cita/SaveEvent',
                data: data,
                success: function (data) {
                    if (data.status) {
                        //Refresh the calender
                        FetchEventAndRenderCalendar(recurso, estado);
                        $('#myModalSave').modal('hide');
                    }
                },
                error: function () {
                    alert('Failed');
                    FetchEventAndRenderCalendar(recurso, estado);
                }
            })
        }
        function SelectPacientes() {
            var pacientes = [];
            $.ajax({
                type: "GET",
                url: "/cita/GetPacientes",
                success: function (data) {
                    //pacientes.push({
                    //    ID: 0,
                    //    NOMBRE: "Seleccione el paciente",
                    //});
                    $.each(data, function (i, v) {
                        pacientes.push({
                            ID: v.ID,
                            NOMBRE: v.NOMBRE,
                        });
                    })
                    $("#PACIENTE").dxSelectBox({
                        placeholder: "Seleccione el paciente",
                        dataSource: new DevExpress.data.ArrayStore({
                            data: pacientes,
                            key: "ID"
                        }),
                        displayExpr: "NOMBRE",
                        valueExpr: "ID",
                        searchEnabled: true,
                        showClearButton: true,
                        onValueChanged: function (data) {
                            //if (data.value != 0 && data.value != null) {
                            //    $("#divSubCapitulo").show();
                            //    SelectSubCapitulos(data.value);
                            //    //alert(data.value);
                            //    //$("#divTema").show();
                            //}
                            //else {
                            //    $("#divSubCapitulo").hide();
                            //    $("#divTema").hide();
                            //}
                        }
                    });
                },
                error: function (error) {
                    alert(error);
                }
            })
        }
        function SelectAreaServicios() {
            var areas = [];
            $.ajax({
                type: "GET",
                url: "/cita/GetAreaServicios",
                success: function (data) {
                    $.each(data, function (i, v) {
                        areas.push({
                            ID: v.ID,
                            DESCRIPCION: v.DESCRIPCION,
                        });
                    })
                    $("#AREA").dxSelectBox({
                        placeholder: "Seleccione el Area de Servicio",
                        dataSource: new DevExpress.data.ArrayStore({
                            data: areas,
                            key: "ID"
                        }),
                        displayExpr: "DESCRIPCION",
                        valueExpr: "ID",
                        searchEnabled: true,
                        showClearButton: true
                    });
                },
                error: function (error) {
                    alert(error);
                }
            })
        }
        function SelectRecursos() {
            var recursos = [];
            $.ajax({
                type: "GET",
                url: "/cita/GetRecursos",
                success: function (data) {
                    $.each(data, function (i, v) {
                        recursos.push({
                            ID: v.ID,
                            DESCRIPCION: v.DESCRIPCION,
                        });
                    })
                    $("#RECURSO_CITA").dxSelectBox({
                        placeholder: "Seleccione el Recurso",
                        dataSource: new DevExpress.data.ArrayStore({
                            data: recursos,
                            key: "ID"
                        }),
                        displayExpr: "DESCRIPCION",
                        valueExpr: "ID",
                        searchEnabled: true,
                        showClearButton: true
                    });
                },
                error: function (error) {
                    alert(error);
                }
            })
        }
        function SelectEstados() {
            var estados = [];
            $.ajax({
                type: "GET",
                url: "/cita/GetEstados",
                success: function (data) {
                    $.each(data, function (i, v) {
                        estados.push({
                            ID: v.ID,
                            DESCRIPCION: v.DESCRIPCION,
                        });
                    })
                    $("#ESTADO").dxSelectBox({
                        placeholder: "Seleccione el estado",
                        dataSource: new DevExpress.data.ArrayStore({
                            data: estados,
                            key: "ID"
                        }),
                        displayExpr: "DESCRIPCION",
                        valueExpr: "ID",
                        value: estados[0].ID,
                        searchEnabled: true,
                        showClearButton: true
                    });
                },
                error: function (error) {
                    alert(error);
                }
            })
        }
        function SelectFiltroEstados() {
            var estados = [];
            $.ajax({
                type: "GET",
                url: "/cita/GetEstados",
                success: function (data) {
                    estados.push({
                        ID: 0,
                        DESCRIPCION: "Todos",
                    });
                    $.each(data, function (i, v) {
                        estados.push({
                            ID: v.ID,
                            DESCRIPCION: v.DESCRIPCION,
                        });
                    })
                    $("#FILTRO_ESTADO").dxSelectBox({
                        placeholder: "Seleccione el estado",
                        dataSource: new DevExpress.data.ArrayStore({
                            data: estados,
                            key: "ID"
                        }),
                        displayExpr: "DESCRIPCION",
                        valueExpr: "ID",
                        value: estados[0].ID,
                        onValueChanged: function (data) {
                            if (data.value != null && data.value != 0) {
                                estado = data.value;
                            }
                            else {
                                estado = 0;
                            }
                            FetchEventAndRenderCalendar(recurso, estado);
                        },
                        searchEnabled: true,
                        showClearButton: true
                    });
                },
                error: function (error) {
                    alert(error);
                }
            })
        }
        function SelectFiltroRecursos() {
            var recursos = [];
            $.ajax({
                type: "GET",
                url: "/cita/GetRecursos",
                success: function (data) {
                    recursos.push({
                        ID: 0,
                        DESCRIPCION: "Todos",
                    });
                    $.each(data, function (i, v) {
                        recursos.push({
                            ID: v.ID,
                            DESCRIPCION: v.DESCRIPCION,
                        });
                    })
                    $("#FILTRO_RECURSO").dxSelectBox({
                        placeholder: "Seleccione el Recurso",
                        dataSource: new DevExpress.data.ArrayStore({
                            data: recursos,
                            key: "ID"
                        }),
                        displayExpr: "DESCRIPCION",
                        valueExpr: "ID",
                        value: recursos[0].ID,
                        onValueChanged: function (data) {
                            if (data.value != null && data.value != 0) {
                                recurso = data.value;
                            }
                            else {
                                recurso = 0;
                            }
                            FetchEventAndRenderCalendar(recurso, estado);
                        },
                        searchEnabled: true,
                        showClearButton: true
                    });
                },
                error: function (error) {
                    alert(error);
                }
            })
        }
    </script>
}