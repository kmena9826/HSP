@model CS_HOSPITALARIO.Models.CS_ADMISION

@{
    ViewBag.Modulo = "mAdmisionOdontologia";
    ViewBag.Title = "Nueva Admision Odontologia";
}
<script src="~/Scripts/vendor.js"></script>
<link href="~/Content/animate.css" rel="stylesheet" />
<div class="row m-0 gap-20 masonry pos-r">
    <div class="masonry-item w-100">
        <div class="row gap-20">
            <div class="masonry-item col-md-12 col-sm-12">
                <div class="bd bgc-white">
                    <div class="layers">
                        <div class="ta-c w-100 p-10">
                            <h4 class="float-left"><span class="color-secondary-h text-uppercase">@ViewBag.Title</span></h4>
                            <nav class="float-right m-0" aria-label="breadcrumb">
                                <ol class="breadcrumb bg-color-blanco">
                                    <li class="breadcrumb-item"><a href="@Url.Action(" Index","Home")">Principal</a></li>
                                    <li class="breadcrumb-item"><a href="@Url.Action(" Index","Odontologia")">Admisión Odontologia</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row m-0 gap-20 masonry pos-r">
    <div class="masonry-item w-100">
        <div class="row gap-20">
            <div class="masonry-item col-md-12 col-sm-12">
                <div class="bgc-white p-20 bd">
                    @*<h4>Nueva admision de laboratorio</h4>
        <hr />*@
                    @*@using (Html.BeginForm())
        {*@
                    @*<input value="P" id="asegurado" name="asegurado" type="hidden">*@
                    <input value="" id="ID_FINANC" name="ID_FINANC" type="hidden">
                    <input value="@ViewBag.Accion" id="Modo" name="Modo" type="hidden">
                    @Html.HiddenFor(model => model.PEDIDO, new { @Value = ViewBag.NUM_PEDIDO })

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row p-20">
                        <label id="id-pedido" class="col-form-label fsz-lg color-secondary-m">
                            @if (ViewBag.Accion == "Editar")
                            {
                                @Model.PEDIDO
                            }
                            else
                            {
                                @ViewBag.NUM_PEDIDO
                            }
                            @*<i class="fas fa-external-link-alt fsz-xs color-secondary-m" data-toggle="tooltip" data-placement="right" data-html="true" title="Buscar en <b>Softland</b>"></i>*@
                        </label>

                        <div class="form-group ml-auto">
                            <input type="submit" value="Guardar" class="btn btn-primary" onclick="return ValidarForm();" />
                            @Html.ActionLink("Cancelar", "AdmisionesOdontologia", "Odontologia", null, new { @class = "btn btn-outline-secondary" })
                        </div>
                    </div>
                    <hr style="margin-bottom:30px" />
                    <ul class="nav nav-tabs" id="myTabLaboratorio" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="admision-tab" data-toggle="tab" href="#admision" role="tab" aria-controls="admision" aria-selected="true">Admision</a>
                        </li>
                    </ul>
                    <div class="tab-content" id="myTabLaboratorio">
                        <div class="tab-pane fade show active" id="admision" role="tabpanel" aria-labelledby="admision-tab">
                            <hr />
                            <div class="form-row">
                                <div class="form-group col-md-5">
                                    <label>Paciente</label>
                                    <div class="">
                                        @Html.DropDownList("CLIENTE_ID", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.PACIENTE_ID, "", new { @class = "text-danger" })*@
                                        <div class="invalid-feedback">
                                            Debe de seleccionar el paciente.
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group col-md-5">
                                    <label>Medico</label>
                                    <div class="">
                                        @Html.DropDownList("DOCTOR_ID", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DOCTOR_ID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group col-md-2">
                                    <label class="switch float-right" style="right:30px;top:30px;">
                                        @*<input id="chbx" type="checkbox" class="switch-input">*@
                                        @Html.CheckBoxFor(model => model.ASEGURADO, new { @class = "switch-input" })
                                        <span class="switch-label" data-on="Asegurado" data-off="Privado"></span>
                                        <span class="switch-handle"></span>
                                    </label>
                                </div>
                            </div>
                            <hr />
                            <div class="form-row">
                                <div class="form-group col-md-4">
                                    <label>Causa de Admisión</label>
                                    <div class="">
                                        @Html.DropDownList("CAUSA_ADMISION_ID", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.CAUSA_ADMISION_ID, "", new { @class = "text-danger" })*@
                                        <div class="invalid-feedback">
                                            Debe de seleccionar la causa de la admision.
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group col-md-4">
                                    <label>Prioridad</label>
                                    <div class="">
                                        @Html.DropDownList("PRIORIDAD_ID", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.PRIORIDAD_ID, "", new { @class = "text-danger" })*@
                                        <div class="invalid-feedback">
                                            Debe de seleccionar la prioridad.
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group col-md-4">
                                    <label>Remitido</label>
                                    <div class="">
                                        @Html.DropDownList("REMITIDO", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.REMITIDO, "", new { @class = "text-danger" })
                                        <div class="invalid-feedback">
                                            Debe de seleccionar por quien fue remitido el paciente.
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group col-md-4">
                                    <label>Tipo de ingreso</label>
                                    <div class="">
                                        @Html.DropDownList("TIPO_INGRESO_ID", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TIPO_INGRESO_ID, "", new { @class = "text-danger" })
                                        <div class="invalid-feedback">
                                            Debe de seleccionar el tipo de ingreso del paciente.
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-row">
                                <div id="financ" class="form-group col-md-4">
                                    <label>Financiador</label>
                                    <div class="">
                                        @Html.DropDownList("FINANCIADOR", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.FINANCIADOR, "", new { @class = "text-danger" })*@
                                        <div class="invalid-feedback">
                                            Debe de seleccionar el financiador.
                                        </div>
                                    </div>
                                </div>
                                <div id="tipSeg" class="form-group col-md-4">
                                    <label>Tipo de Asegurado</label>
                                    <div class="col-md-12">
                                        @Html.DropDownList("TIPO_SEGURO", null, "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.TIPO_SEGURO, "", new { @class = "text-danger" })*@
                                        <div class="invalid-feedback">
                                            Debe de seleccionar el tipo de seguro.
                                        </div>
                                    </div>
                                </div>
                                <div id="afil" class="form-group col-md-4">
                                    <label>Nº Afiliado</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.NUM_AFILIADO, new { htmlAttributes = new { @class = "form-control", placeholder = "Nº Afiliado" } })
                                        @*@Html.ValidationMessageFor(model => model.NUM_AFILIADO, "", new { @class = "text-danger" })*@
                                        <div class="invalid-feedback">
                                            Debe de ingresar el numero de afiliado.
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                    @*}*@
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <link href="~/Content/select2.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap-notify.js"></script>
    <script src="~/Scripts/select2.js"></script>
    <script type="text/javascript">

        var contador = 0

      function formatDate(date, format) {
            format = format + "";
            var result = "";
            var i_format = 0;
            var c = "";
            var token = "";
            var y = date.getYear() + "";
            var M = date.getMonth() + 1;
            var d = date.getDate();
            var E = date.getDay();
            var H = date.getHours();
            var m = date.getMinutes();
            var s = date.getSeconds();
            var yyyy, yy, MMM, MM, dd, hh, h, mm, ss, ampm, HH, H, KK, K, kk, k;
            // Convert real date parts into formatted versions
            var value = new Object();
            if (y.length < 4) { y = "" + (y - 0 + 1900); }
            value["y"] = "" + y;
            value["yyyy"] = y;
            value["yy"] = y.substring(2, 4);
            value["M"] = M;
            value["MM"] = LZ(M);
            value["MMM"] = MONTH_NAMES[M - 1];
            value["NNN"] = MONTH_NAMES[M + 11];
            value["d"] = d;
            value["dd"] = LZ(d);
            value["E"] = DAY_NAMES[E + 7];
            value["EE"] = DAY_NAMES[E];
            value["H"] = H;
            value["HH"] = LZ(H);
            if (H == 0) { value["h"] = 12; }
            else if (H > 12) { value["h"] = H - 12; }
            else { value["h"] = H; }
            value["hh"] = LZ(value["h"]);
            if (H > 11) { value["K"] = H - 12; } else { value["K"] = H; }
            value["k"] = H + 1;
            value["KK"] = LZ(value["K"]);
            value["kk"] = LZ(value["k"]);
            if (H > 11) { value["a"] = "PM"; }
            else { value["a"] = "AM"; }
            value["m"] = m;
            value["mm"] = LZ(m);
            value["s"] = s;
            value["ss"] = LZ(s);
            while (i_format < format.length) {
                c = format.charAt(i_format);
                token = "";
                while ((format.charAt(i_format) == c) && (i_format < format.length)) {
                    token += format.charAt(i_format++);
                }
                if (value[token] != null) { result = result + value[token]; }
                else { result = result + token; }
            }
            return result;
        }


    function ValidarForm() {
        let isvalid = true;

        var paciente = $("#CLIENTE_ID");
        paciente.removeClass("is-invalid");

        var causa = $("#CAUSA_ADMISION_ID");
        causa.removeClass("is-invalid");

        var prioridad = $("#PRIORIDAD_ID");
        prioridad.removeClass("is-invalid");

        var financiador = $("#FINANCIADOR");
        financiador.removeClass("is-invalid");

        var tiposeguro = $("#TIPO_SEGURO");
        tiposeguro.removeClass("is-invalid");

        var tipoingreso = $("#TIPO_INGRESO_ID");
        tipoingreso.removeClass("is-invalid");
        

        var numafiliado = $("#NUM_AFILIADO");
        numafiliado.removeClass("is-invalid");

        var remitido = $("#REMITIDO");
        remitido.removeClass("is-invalid");

        var checkbox = document.querySelector('input[type="checkbox"]');


        $("#admision-tab").css('color', '#0f9aee');
        $("#orden-tab").css('color', '#0f9aee');
        $("#errorexamenes").hide();

        if (remitido.val() == "") {

            $.notify({ message: 'Debe seleccion por quien fue remitido el paciente.' }, { type: 'danger' });
            remitido.addClass("is-invalid");
            isvalid = false;
            $("#admision-tab").css('color', 'red');
        }

        if (paciente.val() == "") {

            $.notify({ message: 'El paciente es requerido' }, { type: 'danger' });
            paciente.addClass("is-invalid");
            isvalid = false;
            $("#admision-tab").css('color', 'red');
        }
        if (causa.val() == "") {

            $.notify({ message: 'La causa de admision es requerido' }, { type: 'danger' });
            causa.addClass("is-invalid");
            isvalid = false;
            $("#admision-tab").css('color', 'red');
        }
        if (prioridad.val() == "") {

            $.notify({ message: 'La prioridad es requerido' }, { type: 'danger' });
            prioridad.addClass("is-invalid");
            isvalid = false;
            $("#admision-tab").css('color', 'red');
        }
        if (tipoingreso.val() == "") {

            $.notify({ message: 'El tipo de ingreso es requerido' }, { type: 'danger' });
            prioridad.addClass("is-invalid");
            isvalid = false;
            $("#admision-tab").css('color', 'red');
        }
        if (checkbox.checked) {
            if (financiador.val() == "") {

                $.notify({ message: 'El financiador es requerido' }, { type: 'danger' });
                financiador.addClass("is-invalid");
                isvalid = false;
                $("#admision-tab").css('color', 'red');
            }
            if (tiposeguro.val() == "") {

                $.notify({ message: 'El tipo de seguro es requerido' }, { type: 'danger' });
                tiposeguro.addClass("is-invalid");
                isvalid = false;
                $("#admision-tab").css('color', 'red');
            }
            if (numafiliado.val() == "") {

                $.notify({ message: 'El numero de afiliado es requerido' }, { type: 'danger' });
                numafiliado.addClass("is-invalid");
                isvalid = false;
                $("#admision-tab").css('color', 'red');
            }
        }

        if (isvalid == false) {
            $("#admision-tab").click();
        }
        if (isvalid == true) {
            let admision = {
                "CLIENTE_ID": $("#CLIENTE_ID").val(),
                "PRIORIDAD_ID": $("#PRIORIDAD_ID").val(),
                "CAUSA_ADMISION_ID": $("#CAUSA_ADMISION_ID").val(),
                "TIPO_INGRESO_ID": $("#TIPO_INGRESO_ID").val(),
                "ASEGURADO": document.querySelector('input[type="checkbox"]').checked,
                "PEDIDO": $("#PEDIDO").val(),
                "FINANCIADOR": $("#FINANCIADOR").val(),
                "TIPO_SEGURO": $("#TIPO_SEGURO").val(),
                "PEDIDO": $("#PEDIDO").val(),
                "NUM_AFILIADO": $("#NUM_AFILIADO").val(),
                "ATENDIDO": false,
                "DOCTOR_ID": $("#DOCTOR_ID").val(),
                "REMITIDO": $("#REMITIDO").val()

            };
            GuardarAdmisionOdontologia(admision, $("#FINANCIADOR").val());
        }
        isvalid = false;
        return isvalid;
    }

    $(document).ready(function () {
        $('#CLIENTE_ID').select2();
        $('#DOCTOR_ID').select2();
        $('#AREA_SERVICIO_ID').select2();
        $('#CAUSA_ADMISION_ID').select2();
        $('#TIPO_INGRESO_ID').select2();
        $('#PRIORIDAD_ID').select2();
        $('#ID_EXAMEN').select2();
        $('#FINANCIADOR').select2();
        $('#TIPO_SEGURO').select2();
        $('#REMITIDO').select2();

        if ($('#Modo').val() == "Editar" && $('#ASEGURADO').val()) {
            $('#financ').show();
            $('#afil').show();
            $('#tipSeg').show();
        }
        else {
            $('#financ').hide();
            $('#afil').hide();
            $('#tipSeg').hide();
        }

        $('#PACIENTE_ID').on('change', function () {
            $('#CLIENTE_ID').val(this.value);
        });

        //$('#ID_EXAMEN').select2();
        $('#CLIENTE_ID').on('change', function () {
            $('#CLIENTE_ID').val(this.value);
        });
        $('#CLIENTE_ID').on('select2:select', function (e) {
            var data = e.params.data;
            if (data.id == "") {
                $("#orden-tab").removeClass("nav-link");
                $("#orden-tab").addClass("nav-link disabled");
            }
            else {
                $("#orden-tab").removeClass("nav-link disabled");
                $("#orden-tab").addClass("nav-link");
            }
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        var checkbox = document.querySelector('input[type="checkbox"]');

        checkbox.addEventListener('change', function () {
            if (checkbox.checked) {
                // do this
                $('#financ').show();
                $('#afil').show();
                $('#tipSeg').show();
            } else {
                // do that
                $('#financ').hide();
                $('#afil').hide();
                $('#tipSeg').hide();
            }
            $('#FINANCIADOR').val('');
            $('#TIPO_SEGURO').val('');
            $('#NUM_AFILIADO').val('');
        });
    });


    //var finanz = document.getElementById("FINANCIADOR");

    //finanz.addEventListener("change", function () {
    //    document.getElementById('ID_FINANC').value = document.getElementById('FINANCIADOR').value;
    //});

        $('#FINANCIADOR').change(function () {

            var valor = $("#FINANCIADOR").val();
            console.log(valor);
            document.getElementById('ID_FINANC').value = valor;
            //document.getElementById('ID_FINANC').value == valor;
        });

        var idPac = document.getElementById("CLIENTE_ID");

    idPac.addEventListener("change", function () {
        document.getElementById('ID_FINANC').value = $("#CLIENTE_ID :selected").text();
    });

        function GuardarAdmisionOdontologia(admision, financiador) {

            var  merr = 'N';
        $.ajax({
            type: "POST",
            url: '/Odontologia/NuevaAdmisionOdontologia',
            data: JSON.stringify({ admision: admision, ID_FINANC: financiador }),
            dataType: "JSON",
            contentType: "application/json",
            success: function (data) {
                console.log(data);
                if (data.status) {
                    location.href = './AdmisionesOdontologia';
                }
            },
            error: function () {
                $.notify({ message: 'Error al registrar los examenes' }, { type: 'danger' });
            }
        })
        }


    

    function ValidarAdmision() {
        let isvalid = true;

        var paciente = $("#CLIENTE_ID");
        paciente.removeClass("is-invalid");


        var causa = $("#CAUSA_ADMISION_ID");
        causa.removeClass("is-invalid");

        var prioridad = $("#PRIORIDAD_ID");
        prioridad.removeClass("is-invalid");


        var financiador = $("#FINANCIADOR");
        financiador.removeClass("is-invalid");

        var tiposeguro = $("#TIPO_SEGURO");
        tiposeguro.removeClass("is-invalid");

        var numafiliado = $("#NUM_AFILIADO");
        numafiliado.removeClass("is-invalid");

        var remitido = $("#REMITIDO");
        remitido.removeClass("is-invalid");

        var checkbox = document.querySelector('input[type="checkbox"]');

        $("#admision-tab").css('color', '#0f9aee');

        if (remitido.val() == "") {

            $.notify({ message: 'Debe seleccion por quien fue remitido el paciente.' }, { type: 'danger' });
            remitido.addClass("is-invalid");
            isvalid = false;
            $("#admision-tab").css('color', 'red');
        }

        if (paciente.val() == "") {

            $.notify({ message: 'El paciente es requerido' }, { type: 'danger' });
            paciente.addClass("is-invalid");
            isvalid = false;
            $("#admision-tab").css('color', 'red');
        }
        if (causa.val() == "") {

            $.notify({ message: 'La causa de admision es requerido' }, { type: 'danger' });
            causa.addClass("is-invalid");
            isvalid = false;
            $("#admision-tab").css('color', 'red');
        }
        if (prioridad.val() == "") {

            $.notify({ message: 'La prioridad es requerido' }, { type: 'danger' });
            prioridad.addClass("is-invalid");
            isvalid = false;
            $("#admision-tab").css('color', 'red');
        }
        if (checkbox.checked) {
            if (financiador.val() == "") {

                $.notify({ message: 'El financiador es requerido' }, { type: 'danger' });
                financiador.addClass("is-invalid");
                isvalid = false;
                $("#admision-tab").css('color', 'red');
            }
            if (tiposeguro.val() == "") {

                $.notify({ message: 'El tipo de seguro es requerido' }, { type: 'danger' });
                tiposeguro.addClass("is-invalid");
                isvalid = false;
                $("#admision-tab").css('color', 'red');
            }
            if (numafiliado.val() == "") {

                $.notify({ message: 'El numero de afiliado es requerido' }, { type: 'danger' });
                numafiliado.addClass("is-invalid");
                isvalid = false;
                $("#admision-tab").css('color', 'red');
            }
        }
        if (isvalid == false) {
            $("#admision-tab").click();
        }
    }
    /**/
@*@if (ViewBag.Accion == "Editar" && Model.ASEGURADO)
    {
<text>
    /**/
    $('#financ').show();
    $('#afil').show();
    $('#tipSeg').show();
    /**/
</text>
}
else
{
<text>
    /**/
    $('#financ').hide();
    $('#afil').hide();
    $('#tipSeg').hide();
/**/
</text>
}*@
        /**/

    </script>
}